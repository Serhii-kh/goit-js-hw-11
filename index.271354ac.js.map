{"mappings":"AACA,MAAMA,EAAUC,SAASC,cAAc,gBACtBD,SAASC,cAAc,eAExCF,EAAQG,iBAAiB,UAKzB,SAAsBC,GACpBA,EAAEC,iBACFC,QAAQC,IAAIH,EAAEI,cAAcC,SAASC,YAAYC,M,IALnDL,QAAQC,IAAIP,GACZM,QAAQC,IAAIP,EAAQS,SAASC,aAOVE,WACjB,MAIMC,EAHU,CAAC,EAAG,EAAG,GAGSC,KAAIF,MAAMG,IACxC,MAAMC,QAAiBC,MAAM,8CAAoBF,KAEjD,OADAT,QAAQC,IAAIM,GACLG,EAASE,MAAM,IAIlBC,QAAcC,QAAQC,IAAIR,GAChCP,QAAQC,IAAIY,EAAM,EAGpBG","sources":["src/index.js"],"sourcesContent":["import axions from 'axios';\nconst formRef = document.querySelector('#search-form');\nconst inputRef = document.querySelector('searchQuery');\n\nformRef.addEventListener('submit', onFormSubmit);\n\nconsole.log(formRef);\nconsole.log(formRef.elements.searchQuery);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  console.log(e.currentTarget.elements.searchQuery.value);\n}\n\nconst fetchUsers = async () => {\n  const baseUrl = 'https://jsonplaceholder.typicode.com';\n  const userIds = [1, 2, 3];\n\n  // 1. Создаём массив промисов\n  const arrayOfPromises = userIds.map(async userId => {\n    const response = await fetch(`${baseUrl}/users/${userId}`);\n    console.log(arrayOfPromises);\n    return response.json();\n  });\n\n  // 2. Запускаем все промисы параллельно и ждем их завершения\n  const users = await Promise.all(arrayOfPromises);\n  console.log(users);\n};\n\nfetchUsers();\n"],"names":["$1f0dc3b9307be026$var$formRef","document","querySelector","addEventListener","e","preventDefault","console","log","currentTarget","elements","searchQuery","value","async","arrayOfPromises","map","userId","response","fetch","json","users","Promise","all","$1f0dc3b9307be026$var$fetchUsers"],"version":3,"file":"index.271354ac.js.map"}